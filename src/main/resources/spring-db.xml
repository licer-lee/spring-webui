<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/tx
    	http://www.springframework.org/schema/tx/spring-tx.xsd
    	http://mybatis.org/schema/mybatis-spring 
    	http://mybatis.org/schema/mybatis-spring.xsd">


	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<value>classpath:jdbc.properties</value>
		</property>
	</bean>

	<!-- 连接池 -->
	<bean id="myDataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>

	<!-- sessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="myDataSource" />
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<!-- mapper接口和xml文件不在同一目录下，需设置mapperLocations -->
		<!-- <property name="mapperLocations">
			<list>
				<value>classpath:com/liwc/mapper/*.xml</value>
			</list>
		</property> -->
	</bean>
	
	<!-- 扫描注册mapper接口，自动注入mapper.xml  -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.liwc.mapper" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>
	

	<!-- 事务管理器 -->
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="myDataSource" />
	</bean>


	<!-- scan for mappers and let them be autowired -->
	<mybatis:scan base-package="com.liwc.mapper" />

	<!-- 启用注解事物 @Transactional -->
	<!-- <tx:annotation-driven transaction-manager="txManager"
		proxy-target-class="true" /> -->


	<!-- 启用声明式事物：启用aop自动代理 -->
	<aop:aspectj-autoproxy />
	
	<!-- aop声明式事物 -->
	<aop:config>
		<!-- 定义切入点 -->
		<aop:pointcut id="txPointcut" expression="execution(* com.liwc.service..*.*(..))"></aop:pointcut>
		<!-- 关联切入点与待织入的逻辑 -->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut" />
	</aop:config>
	
	<!-- 定义织入的逻辑（事物管理器） -->
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<!-- 修改操作设置 -->
			<tx:method name="save*" propagation="REQUIRED" isolation="REPEATABLE_READ" />
			<!-- 查询操作设置只读事物 -->
			<tx:method name="get*" read-only="true" />
			<tx:method name="find*" read-only="true" />
		</tx:attributes>
	</tx:advice>

	


</beans>